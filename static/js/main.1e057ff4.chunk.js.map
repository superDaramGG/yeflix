{"version":3,"sources":["Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Title","Grid","Section","title","children","role","aria-label","Text","span","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","Loader","length","map","movie","key","poster_path","original_title","vote_average","release_date","substring","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","search","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSumbit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","handleSubmit","event","preventDefault","searchByTerm","target","a","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","showDeatil","console","log","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e057ff4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  margin-bottom: 25px;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  border: 1px solid #fff;\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport default () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      ⏰\r\n    </span>\r\n  </Container>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${(props) => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  border: 1px solid #fff;\r\n  background-image: url(${(props) => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : \"사진이 없습니다.\"\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐️\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>{title}</Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movies | Yeflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        <Helmet>\r\n          <title>Movies | Yeflix</title>\r\n        </Helmet>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upcoming && upcoming.length > 0 && (\r\n          <Section title=\"Upcoming Movies\">\r\n            {upcoming.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Movies\">\r\n            {popular.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"4ccbe44dfec2618bdcd1628750a35309\",\r\n    language: \"en-US\",\r\n  },\r\n});\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: { results: upcoming },\r\n      } = await moviesApi.upcoming();\r\n      const {\r\n        data: { results: popular },\r\n      } = await moviesApi.popular();\r\n      this.setState({\r\n        nowPlaying,\r\n        upcoming,\r\n        popular,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"can't find movies information\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0 20px;\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV Shows | Yeflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"Top Rated Shows\">\r\n            {topRated.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Shows\">\r\n            {popular.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"Airing Today\">\r\n            {airingToday.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n      this.setState({\r\n        topRated,\r\n        popular,\r\n        airingToday,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find TV information.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, error, loading } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0 20px;\r\n  padding: 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  loading,\r\n  searchTerm,\r\n  handleSumbit,\r\n  error,\r\n  updateTerm,\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search | Yeflix</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSumbit}>\r\n      <Input\r\n        placeholder=\"Search Movies or TV Shows...\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      />\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResults.map((movie) => (\r\n              <>\r\n                <span key={movie.id}>{movie.title}</span>\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  imageUrl={movie.poster_path}\r\n                  title={movie.original_title}\r\n                  rating={movie.vote_average}\r\n                  year={movie.release_date.substring(0, 4)}\r\n                  isMovie={true}\r\n                />\r\n              </>\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {tvResults.map((show) => (\r\n              <>\r\n                <span key={show.id}>{show.title}</span>\r\n                <Poster\r\n                  key={show.id}\r\n                  id={show.id}\r\n                  imageUrl={show.poster_path}\r\n                  title={show.original_title}\r\n                  rating={show.vote_average}\r\n                  year={show.release_date.substring(0, 4)}\r\n                />\r\n              </>\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n        {tvResults &&\r\n          movieResults &&\r\n          tvResults.length === 0 &&\r\n          movieResults.length === 0 && (\r\n            <Message text=\"Nothing found\" color=\"#95a5a6\" />\r\n          )}\r\n      </>\r\n    )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  error: PropTypes.string,\r\n  searchTerm: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  handleSumbit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    loading: false,\r\n    error: null,\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  updateTerm = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    this.setState({\r\n      searchTerm: value,\r\n    });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const {\r\n        data: { results: movieResults },\r\n      } = await moviesApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults },\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({ movieResults, tvResults });\r\n    } catch {\r\n      this.setState({ error: \"can't find results\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        loading={loading}\r\n        error={error}\r\n        searchTerm={searchTerm}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 5px solid\r\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 2rem;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 50%;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, loading, error }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | Yeflix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        {result.original_title ? result.original_title : result.original_name} |\r\n        Yeflix\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : \"사진이 없습니다.\"\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_title}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            <Item>\r\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name}`\r\n                )}\r\n            </Item>\r\n          </ItemContainer>\r\n          <Overview>{result.overview}</Overview>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname },\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\"),\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDeatil(parsedId));\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"Can't find anything.\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n    console.log(result);\r\n    return <DetailPresenter result={result} error={error} loading={loading} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Header from \"Components/Header\";\r\nimport Detail from \"Routes/Detail\";\r\n\r\nexport default () => (\r\n  <Router>\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/tv\" component={TV} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/Show/:id\" component={Detail} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n  ${reset};\r\n  a{\r\n    text-decoration: none;\r\n    color:inherit;\r\n  }\r\n  *{\r\n    box-sizing: border-box;\r\n  }\r\n  body{\r\n    font-family: -apple-system, BlinkMacSystemFont;\r\n    font-size: 12px;\r\n    background-color: rgba(20, 20, 20, 1);\r\n    color: white;\r\n    padding-top: 50px;\r\n  }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\nimport \"./api\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}